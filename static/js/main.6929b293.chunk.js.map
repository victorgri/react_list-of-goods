{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","minLength","startRenderingList","setState","sortByLength","LENGTH","sortByAlphabet","ALPHABET","reverse","reset","filterByLength","event","Number","target","value","this","visibleGoods","goods","filter","good","length","sort","good1","good2","localeCompare","getReorderedGoods","className","type","onClick","name","id","onChange","Array","map","item","index","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,KACnBC,UAAW,GALf,EAQEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEN,WAAW,KAT/B,EAYEO,aAAe,WACb,EAAKD,SAAS,CAAEJ,SAAUN,EAASY,UAbvC,EAgBEC,eAAiB,WACf,EAAKH,SAAS,CAAEJ,SAAUN,EAASc,YAjBvC,EAoBEC,QAAU,WACR,EAAKL,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAtBzB,EA0BEW,MAAQ,WACN,EAAKN,SAAS,CACZL,YAAY,EACZC,SAAUN,EAASO,KACnBC,UAAW,KA9BjB,EAkCES,eAAiB,SAACC,GAChB,EAAKR,SAAS,CACZF,UAAWW,OAAOD,EAAME,OAAOC,UApCrC,4CAwCE,WACE,MAKIC,KAAKnB,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,SACAE,EAJF,EAIEA,UAGIe,EArFV,SACEC,EACAlB,EACAD,EACAG,GAEA,IAAMe,EAAe,YAAIC,GACtBC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUnB,KAmBjC,OAjBAe,EAAaK,MAAK,SAACC,EAAOC,GACxB,OAAQxB,GACN,KAAKN,EAASc,SACZ,OAAOe,EAAME,cAAcD,GAE7B,KAAK9B,EAASY,OACZ,OAAOiB,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITtB,GACFkB,EAAaR,UAGRQ,EA2DgBS,CACnB/B,EACAK,EACAD,EACAG,GAGF,OACE,qBAAKyB,UAAU,MAAf,SACI7B,EAUE,qCACE,sBAAK6B,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASb,KAAKT,eACdoB,UAAU,+BAHZ,iCAQA,wBACEC,KAAK,SACLC,QAASb,KAAKX,aACdsB,UAAU,+BAHZ,4BAQA,wBACEC,KAAK,SACLC,QAASb,KAAKP,QACdkB,UAAU,4BAHZ,qBAQA,wBACEC,KAAK,SACLC,QAASb,KAAKN,MACdiB,UAAU,8BAHZ,mBAOA,wBACEG,KAAK,YACLC,GAAG,YACHhB,MAAOb,EACP8B,SAAUhB,KAAKL,eAJjB,SAOI,YAAI,IAAIsB,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACrB,wBAAmBrB,MAAOqB,EAAQ,EAAlC,SACGA,EAAQ,GADED,WAQrB,oBAAIR,UAAU,QAAd,SACGV,EAAaiB,KAAI,SAAAd,GAAI,OACpB,oBAAIO,UAAU,yBAAd,SACGP,GADyCA,WA3DlD,wBACEQ,KAAK,SACLC,QAASb,KAAKb,mBACdwB,UAAU,oBAHZ,yBA3DZ,GAAyBU,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6929b293.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods]\n    .filter(good => good.length >= minLength);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    minLength: 1,\n  };\n\n  startRenderingList = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n      minLength: 1,\n    });\n  };\n\n  filterByLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      minLength: Number(event.target.value),\n    });\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n      minLength,\n    } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n      minLength,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.startRenderingList}\n              className=\"button is-success\"\n            >\n              Start\n            </button>\n          ) : (\n            <>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  onClick={this.sortByAlphabet}\n                  className=\"button is-primary is-rounded\"\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.sortByLength}\n                  className=\"button is-success is-rounded\"\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reverse}\n                  className=\"button is-info is-rounded\"\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reset}\n                  className=\"button is-danger is-rounded\"\n                >\n                  Reset\n                </button>\n                <select\n                  name=\"minLength\"\n                  id=\"minLength\"\n                  value={minLength}\n                  onChange={this.filterByLength}\n                >\n                  {\n                    [...new Array(10)].map((item, index) => (\n                      <option key={item} value={index + 1}>\n                        {index + 1}\n                      </option>\n                    ))\n                  }\n                </select>\n              </div>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li className=\"Goods__item level-item\" key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}